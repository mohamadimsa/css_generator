#!/usr/bin/php

<?php

$search_pictures = glob("*.png");
include 'css/function.php';
$siz = [];
if(error_image() === true && !isset($argv[1]))
{
 echo "Error : le nombre d'image present dans le fichier n'est pas suffisant pour excuter le programe veillez a avoir au minimum 2 image png".PHP_EOL;
 return 0;
}

if(!isset($argv[2]) && isset($argv[1])&& $argv[1] != "-s" && !regex("--output-style=", $argv[1]) &&
 $argv[1] != "-i" && !regex("--output-image=", $argv[1]) && $argv[1] != "--help" && $argv[1] != "-h" &&
 $argv[1] != "-r" && !regex("--recurcive", $argv[1])&& $argv[1] != "-o" && !regex("--override-size=", $argv[1])){
  merge_dir_select($argv[1]);
 }


if(!isset($argv[1])){
  generate_css($search_pictures);
  merge_image(charge_image($search_pictures));
}
//  option -s --output-style=
elseif(isset($argv[1]) && $argv[1] == "-s" || regex("--output-style=", $argv[1])){
        if(regex("--output-style=", $argv[1]) && !isset($argv[2])){

           generate_css($search_pictures,recupe_name($argv[1]));
           merge_image(charge_image($search_pictures));

        }
        elseif($argv[1] == "-s" && isset($argv[2]) && !isset($argv[3])){
          generate_css($search_pictures,$argv[2]);
          merge_image(charge_image($search_pictures));
        }
        elseif($argv[1] == "-s" && isset($argv[2]) && isset($argv[3])){
          merge_dir_select($argv[3], $argv[2], true);
        }
        elseif($argv[1] == "-s" && isset($argv[2]) && isset($argv[3])){
          merge_dir_select($argv[3], $argv[2], false);
        }
        elseif(regex("--output-style=", $argv[1]) && isset($argv[2])){

          generate_css($search_pictures);
          merge_dir_select($argv[2], recupe_name($argv[1]), true);
        }
        else{
         man();
        }

}

   //  option -i --output-image=
elseif(isset($argv[1]) && $argv[1] == "-i" || regex("--output-image=", $argv[1])){
        if(regex("--output-image=", $argv[1]) && !isset($argv[2])){

          generate_css($search_pictures);
          merge_image(charge_image($search_pictures), recupe_name($argv[1]));
        }
        elseif($argv[1] == "-i" && isset($argv[2]) && !isset($argv[3])){
          generate_css($search_pictures);
          merge_image(charge_image($search_pictures),$argv[2]);
        }
        elseif($argv[1] == "-i" && isset($argv[2]) && isset($argv[3])){
          merge_dir_select($argv[3], $argv[2], false);
        }
        elseif(regex("--output-image=", $argv[1]) && isset($argv[2])){

          generate_css($search_pictures);
          merge_dir_select($argv[2], recupe_name($argv[1]), false);
        }
        else{
          man();
        }
}
   //option -r
 elseif(isset($argv[1]) && $argv[1] == "-r" || regex("--recursive", $argv[1])){
  if($argv[1] == "--recursive" || $argv[1] == "-r" && !isset($argv[2]) ){
    recur();
  }
  elseif($argv[1] == "--recursive" || $argv[1] == "-r" && isset($argv[2]) ){
    merge_dir_select($argv[2], "null", false ,true);
  }
}

//option -o
elseif(isset($argv[1]) && $argv[1] == "-o" || regex("--override-size=", $argv[1])){
  if(regex("--override-size=", $argv[1]) && !isset($argv[2])){
      echo "option -o ok\n";
  }
  elseif($argv[1] == "-o" && isset($argv[2])  && !isset($argv[3])){
    if(false != verif_o($argv[2])){
      recup_size($argv[2]);
      if(count($search_pictures)!=0){
      merge_image(charge_image($search_pictures,$siz['width'],$siz['height']));
      }
      else{echo "error : aucune image trouver dans ce dossier\n";}
          
    }
    else
    {
      echo "error : respecter la syntax 'SIZExSIZE'".PHP_EOL.PHP_EOL;

      man();
    }

    
}

}

// man
elseif($argv[1] =="--help" || $argv[1] == "-h"){
  man();
}



